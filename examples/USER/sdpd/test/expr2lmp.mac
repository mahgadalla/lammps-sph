expr2lmp(expr):=block([s, l, v],
  load("opsubst"),
  expr: opsubst(pow,"^",expr),
  l: listofvars(expr),
  for v in l do expr: subst(simplode(["__", v, "__"]), v, expr),
  s: string(expr),
  for v in l do s: ssubst(simplode(["${", v, "}"]), simplode(["__", v, "__"]), s),
  s: ssubst("", "\"", s),
  return(s));

expr2var_(var)::= sconcat( "variable ", var, " equal ", expr2lmp(ev(var)));

expr2var(var)::= buildq([var], if not listp(var) then expr2var_(var) else  map('expr2var_, 'var));

expr2file(var, fname)::= buildq([var, fname],
  block(
    [f: openw(fname), slist: expr2var(var)],
    if not listp(slist) then slist: [slist],
    map( lambda([s], printf(f, "~a~%", s)), slist),
    close(f)));
  
expr2lmp(a);
expr2lmp(a+aa);
expr2lmp(a^2^b);
expr2lmp(sin(x)*xy + xx-z);


