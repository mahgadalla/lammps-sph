/* SPH kernel from Morris */
norm2D: 63 / 478 / %pi;
norm3D: 108/478/%pi/27;
normGauss: 4*%pi;

fgaus(x) := 1/(2*%pi)^(3/2)  * exp( -x^2/2);
fsim(s):= [
(3 - s)^5 - 6*(2 - s)^5 + 15*(1 - s)^5,
(3 - s)^5 - 6*(2 - s)^5,
(3 - s)^5
];

fxsim(x):= fsim(x);
ko2D(x):=norm2D*2*%pi*x;
ko3D(x):=norm3D*2*%pi*x^2; 

fplot(x):= if x<1 then fxsim(x)[1]
else if x<2 then fxsim(x)[2]
else if x<3 then fxsim(x)[3]
else 0;

fplotnorm(x):= float(norm3D)*fplot(x);
f(x):= float(norm3D)*fplot(x);

kerint(f):=
integrate(f(x)[1], x, 0, 1) +
integrate(f(x)[2], x, 1, 2) +
integrate(f(x)[3], x, 2, 3);

integrate(ko2D(x)*fxsim(x)[1], x, 0, 1) +
integrate(ko2D(x)*fxsim(x)[2], x, 1, 2) +
integrate(ko2D(x)*fxsim(x)[3], x, 2, 3);

integrate(ko3D(x)*fxsim(x)[1], x, 0, 1) +
integrate(ko3D(x)*fxsim(x)[2], x, 1, 2) +
integrate(ko3D(x)*fxsim(x)[3], x, 2, 3);

integrate(ko3D(x)/x*diff(fxsim(x)[1], x), x, 0, 1) +
integrate(ko3D(x)/x*diff(fxsim(x)[2], x), x, 1, 2) +
integrate(ko3D(x)/x*diff(fxsim(x)[3], x), x, 2, 3);

integrate(ko3D(x)/x^2*fxsim(x)[1], x, 0, 1) +
integrate(ko3D(x)/x^2*fxsim(x)[2], x, 1, 2) +
integrate(ko3D(x)/x^2*fxsim(x)[3], x, 2, 3);

plot2d([lambda([x], fplotnorm(x)*x^2), lambda([x], fgaus(x)*x^2)], [x, 0, 3]); 
plot2d([lambda([x], fplotnorm(x)), lambda([x], fgaus(x))], [x, 0, 3]); 