echo               both
log                ${dname}/log.lammps
dimension          ${ndim}
units              si
atom_style         hybrid  bond meso
communicate        single vel yes
# create simulation box

#3D box
include            ${ndim}-vars.lmp
read_data           poly3d.txt

special_bonds   lj 1 1 1
bond_style fene
bond_coeff 1 ${H} ${r0}  0 0

mass               * ${sdpd_mass}
set                group all meso_rho ${sdpd_rho}

# use Tait's EOS in combination with Morris' laminar viscosity.
# We set rho_0 = 1000 kg/m^3, c = 0.1 m/s, h = 6.5e-5 m.
# The dynamic viscosity is set to 1.0e-3 Pa s, corresponding to a kinematic viscosity of 1.0e-6 m^2/s
pair_style         hybrid/overlay sph/rhosum 1 sdpd
pair_coeff         * * sph/rhosum   ${h}
pair_coeff         * *    sdpd ${sdpd_rho0} ${sdpd_c} ${sdpd_eta} ${h} ${sdpd_temp} ${sdpd_background}

compute            rho_peratom all meso_rho/atom
compute            e_peratom all meso_e/atom
compute            ke_peratom all ke/atom
compute            esph all reduce sum c_e_peratom
compute            ke all ke
compute            sdpd_kin all temp
variable           etot equal c_ke+c_esph

# do full time integration for shear driver and fluid, but keep walls stationary
fix                integrate_fix_full all meso

# "profile" corrected temperature
compute         pTemp all temp/profile 1 1 0 y 10

# average velocity

include   velocity.lmp
include            stress.lmp

dump               dump_id all custom 100 ${dname}/dump*.dat id type x y z vx vy vz c_rho_peratom
dump_modify        dump_id first yes
dump_modify        dump_id sort id
dump_modify        dump_id pad 8

thermo_style       custom step c_sdpd_kin c_pTemp
thermo_modify      norm no
thermo             100

#include            ${ndim}-image.lmp

variable           eps equal 0.25*${dx}
neighbor           ${eps} bin
variable           eps delete
neigh_modify       every 1
include            settimestep.lmp
timestep           ${dt}

restart 10000 ${dname}/sdpd.restart

#include           fene.lmp

#RPF force
variable bodyfx atom mass*${gx}*((y>${Ly}/2.0)-(y<${Ly}/2.0))
fix reverce_periodic all addforce v_bodyfx 0.0 0.0 

#run 50000 every 1000 "velocity all zero linear"

#group        solvent type 1
#compute imsd solvent msd
#compute amsd all msd
#variable        vmsd_x equal c_imsd[1]
#variable        vmsd_t equal c_imsd[4]
#fix             pmsd solvent print 100 "${vmsd_t} ${vmsd_x} " file ${dname}/msd.dat screen yes
#variable        amsd_x equal c_amsd[1]
#variable        amsd_t equal c_amsd[4]
#fix             pamsd all print 100 "${amsd_t} ${amsd_x}" file ${dname}/amsd.dat screen yes

# add dcd file
dump               dump_dcd all dcd 1000 poly3d.dcd

run   100000000 every 1000 "velocity all zero linear"
