/* A maxima file for SPH/SDPD */
load ("vector");
load ("eigen");

ndim: 2;

/* number of particles */
npart: 2;

Lx: 1.000e-3$
h: 6.5e-5$
cutoff: h$
load ("lucy-kernel.mac");
/* load("quadric-kernel.mac");*/

r: makelist([], i, 1, npart);
v: makelist([], i, 1, npart);
/* mass */
m: makelist(1.7e-7, i, 1, npart);
nu: makelist(1.0e-3, i, 1, npart);

r[1]: [Lx/2.0, Lx/2.0]$
v[1]: [0.0, 0.0]$

r[2]: [Lx/2.0+0.5*h, Lx/2.0]$
v[2]: [1.0, 0.0]$

c: 0.0$

/* equation of state */
p(rho):= c^2*rho$

rho: makelist(
  sum(m[j]*w(r[i]-r[j]), j, 1, npart), i, 1, npart
  );

Fc(i, j):= block([pi, pj, rabs],
  pi: p(rho[i]),
  pj: p(rho[j]),
  rabs: vabs(r[i] - r[j]),
  - m[j]/m[i] * (pi/rho[i]^2 + pj/rho[j]^2) * dwdx(rabs)) * unitvector(r[i] - r[j])$

Fd(i, j):= block([rabs],
  rabs: vabs(r[i] - r[j]),
  m[j]*m[i] * (nu[i]+nu[j]) / (rho[i]*rho[j]) * dwdx(rabs)/rabs * (v[i]-v[j]))$

Fpair(i, j):= Fc(i, j) + Fd(i, j);

F(i):= sum( if i=j then 0 else Fpair(i, j), j, 1, npart);

float(rho);
float(Fd(1, 2));