/* A maxima file for SPH/SDPD */
load ("vector");
load ("eigen");

/* number of dimensions */
ndim: 3;

/* number of particles */
npart: 2;

/* domain size */
Lx: 1.000e-3$

/* smoothing length */
h: 6.5e-5$
cutoff: h$

load ("lucy-kernel.mac");
/* load("quadric-kernel.mac");*/

r: makelist([], i, 1, npart);
v: makelist([], i, 1, npart);

/* mass */
m: makelist(1.7e-7, i, 1, npart);
/* viscosity */
nu: makelist(1.0, i, 1, npart);

/* sound speed */
c: 0.1$

r[1]: [Lx/2.0, Lx/2.0, Lx/2.0]$
v[1]: [0.0, 0.0, 0.0]$

r[2]: [Lx/2.0+0.5*h, Lx/2.0, Lx/2.0]$
v[2]: [1.0, 0.0, 0.0]$


/* equation of state */
rho_0: 50.0;
p(rho):= c^2*rho_0/7*( (rho/rho_0)^7 - 1 )$

rho: makelist(
  sum(m[j]*w(r[i]-r[j]), j, 1, npart), i, 1, npart
  );

/* conservative force */
Fc(i, j):= block([pi, pj, rabs],
  pi: p(rho[i]),
  pj: p(rho[j]),
  rabs: vabs(r[i] - r[j]),
  - m[j]*m[i] * (pi/rho[i]^2 + pj/rho[j]^2) * dwdx(rabs)) * unitvector(r[i] - r[j])$

/* dissipative force */
Fd(i, j):= block([rabs, vij, eij],
  rabs: vabs(r[i] - r[j]),
  vij: v[i] - v[j],
  eij: unitvector(r[i] - r[j]),
  (m[j]*m[i] * (nu[i]+nu[j]) / (rho[i]*rho[j]) * dwdx(rabs)/rabs)  * ((eij.vij)*eij + vij))$

Fpair(i, j):= Fc(i, j) + Fd(i, j);

F(i):= sum( if i=j then 0 else Fpair(i, j), j, 1, npart);

float(rho);
float(Fd(2, 1));