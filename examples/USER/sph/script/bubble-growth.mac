kill(all);
load("dimension");
fundamental_dimensions: [mass, length, time, K];
ndim: 3;

J: mass*length^2/time^2;
put(dQ, J, dimension);

/* laten heat */
put(Hwv, J/mass, dimension);
put(dm, mass, dimension);

put(R, length, dimension);
put(dR, length, dimension);
put(dV, length^ndim, dimension);
put(t, time, dimension);
put(dt, time, dimension);
put(rho_v, mass/length^ndim, dimension);
put(rho_l, mass/length^ndim, dimension);
put(cv_l, J/mass/K, dimension);
put(D_l, length*mass/time^3/K, dimension);
put(dT, K, dimension);

D: D_l/cv_l/rho_l;

eq1: dm = dQ/Hwv;

/* TODO: dimension */
if ndim=3 then V: 4/3*%pi*R^3 else V: %pi*R^2;

eq2: dV=diff(V, R)*dR;
eq3: dm = rho_v*dV;
if ndim=3 then S: 4*%pi*R^2 else S: 2*%pi*R;

l: sqrt(D*t);
eq4: dQ= D_l*dT/l*S*dt;
eq5: 'diff(R, t) = dR/dt;

sol: solve([eq1, eq2, eq3, eq4, eq5], [dQ, dV, dm, dR, 'diff(R, t)]);

Rexp: integrate(assoc('diff(R, t), sol[1]), t);
